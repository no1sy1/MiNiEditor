# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(860, 580)
        MainWindow.setMinimumSize(QtCore.QSize(860, 580))
        MainWindow.setMaximumSize(QtCore.QSize(860, 580))
        MainWindow.setFocusPolicy(QtCore.Qt.NoFocus)
        MainWindow.setStyleSheet("background-color: rgb(68, 56, 72);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.back = QtWidgets.QPushButton(self.centralwidget)
        self.back.setGeometry(QtCore.QRect(520, 490, 321, 21))
        self.back.setMouseTracking(False)
        self.back.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.back.setToolTip("")
        self.back.setAutoFillBackground(False)
        self.back.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(150, 150, 150);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(170, 170, 170);\n"
"}")
        self.back.setCheckable(False)
        self.back.setAutoDefault(False)
        self.back.setDefault(False)
        self.back.setFlat(False)
        self.back.setObjectName("back")
        self.green = QtWidgets.QPushButton(self.centralwidget)
        self.green.setGeometry(QtCore.QRect(540, 80, 21, 23))
        self.green.setStyleSheet("background-color: rgb(0, 255, 0);\n"
"border-radius:10px;")
        self.green.setText("")
        self.green.setObjectName("green")
        self.rotate_r = QtWidgets.QPushButton(self.centralwidget)
        self.rotate_r.setGeometry(QtCore.QRect(750, 550, 91, 21))
        self.rotate_r.setStyleSheet("QPushButton {\n"
"background-color: rgb(120, 120, 120);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(140, 140, 140);\n"
"}")
        self.rotate_r.setObjectName("rotate_r")
        self.buttonGroup = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.rotate_r)
        self.red = QtWidgets.QPushButton(self.centralwidget)
        self.red.setGeometry(QtCore.QRect(540, 40, 21, 23))
        self.red.setStyleSheet("background-color: rgb(255, 0, 0);\n"
"border-radius:10px;")
        self.red.setText("")
        self.red.setObjectName("red")
        self.blue = QtWidgets.QPushButton(self.centralwidget)
        self.blue.setGeometry(QtCore.QRect(540, 120, 21, 23))
        self.blue.setStyleSheet("background-color: rgb(0, 0, 255);\n"
"border-radius:10px;")
        self.blue.setText("")
        self.blue.setObjectName("blue")
        self.rotate_l = QtWidgets.QPushButton(self.centralwidget)
        self.rotate_l.setGeometry(QtCore.QRect(10, 550, 91, 21))
        self.rotate_l.setStyleSheet("QPushButton {\n"
"background-color: rgb(120, 120, 120);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(140, 140, 140);\n"
"}")
        self.rotate_l.setObjectName("rotate_l")
        self.buttonGroup.addButton(self.rotate_l)
        self.red_slider = QtWidgets.QSlider(self.centralwidget)
        self.red_slider.setGeometry(QtCore.QRect(570, 40, 271, 21))
        self.red_slider.setStyleSheet("")
        self.red_slider.setMaximum(255)
        self.red_slider.setOrientation(QtCore.Qt.Horizontal)
        self.red_slider.setObjectName("red_slider")
        self.green_slider = QtWidgets.QSlider(self.centralwidget)
        self.green_slider.setGeometry(QtCore.QRect(570, 80, 271, 21))
        self.green_slider.setStyleSheet("")
        self.green_slider.setMaximum(255)
        self.green_slider.setOrientation(QtCore.Qt.Horizontal)
        self.green_slider.setObjectName("green_slider")
        self.blue_slider = QtWidgets.QSlider(self.centralwidget)
        self.blue_slider.setGeometry(QtCore.QRect(570, 120, 271, 21))
        self.blue_slider.setMaximum(255)
        self.blue_slider.setOrientation(QtCore.Qt.Horizontal)
        self.blue_slider.setObjectName("blue_slider")
        self.image = QtWidgets.QLabel(self.centralwidget)
        self.image.setGeometry(QtCore.QRect(10, 40, 500, 500))
        self.image.setMaximumSize(QtCore.QSize(500, 500))
        self.image.setStyleSheet("border-radius:10px;\n"
"background-color: rgb(220, 220, 220);")
        self.image.setFrameShape(QtWidgets.QFrame.Box)
        self.image.setAlignment(QtCore.Qt.AlignCenter)
        self.image.setObjectName("image")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(520, 160, 321, 291))
        self.tabWidget.setStyleSheet("background-color: rgb(68, 56, 72);")
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.pres_sakura = QtWidgets.QPushButton(self.tab_3)
        self.pres_sakura.setGeometry(QtCore.QRect(20, 10, 281, 31))
        self.pres_sakura.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.pres_sakura.setObjectName("pres_sakura")
        self.pres_retro = QtWidgets.QPushButton(self.tab_3)
        self.pres_retro.setGeometry(QtCore.QRect(20, 70, 281, 31))
        self.pres_retro.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.pres_retro.setObjectName("pres_retro")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.ef_rez = QtWidgets.QPushButton(self.tab_2)
        self.ef_rez.setGeometry(QtCore.QRect(20, 10, 281, 41))
        self.ef_rez.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"color: rgb(255, 255, 255);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.ef_rez.setObjectName("ef_rez")
        self.ef_3d1 = QtWidgets.QPushButton(self.tab_2)
        self.ef_3d1.setGeometry(QtCore.QRect(20, 110, 281, 41))
        self.ef_3d1.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.ef_3d1.setObjectName("ef_3d1")
        self.ef_contur = QtWidgets.QPushButton(self.tab_2)
        self.ef_contur.setGeometry(QtCore.QRect(20, 60, 281, 41))
        self.ef_contur.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.ef_contur.setObjectName("ef_contur")
        self.ef_3d2 = QtWidgets.QPushButton(self.tab_2)
        self.ef_3d2.setGeometry(QtCore.QRect(20, 210, 281, 41))
        self.ef_3d2.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.ef_3d2.setObjectName("ef_3d2")
        self.ef_3d3 = QtWidgets.QPushButton(self.tab_2)
        self.ef_3d3.setGeometry(QtCore.QRect(20, 160, 281, 41))
        self.ef_3d3.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.ef_3d3.setObjectName("ef_3d3")
        self.tabWidget.addTab(self.tab_2, "")
        self.widget = QtWidgets.QWidget()
        self.widget.setObjectName("widget")
        self.black_white = QtWidgets.QPushButton(self.widget)
        self.black_white.setGeometry(QtCore.QRect(10, 10, 141, 41))
        self.black_white.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.black_white.setObjectName("black_white")
        self.negative = QtWidgets.QPushButton(self.widget)
        self.negative.setGeometry(QtCore.QRect(160, 10, 141, 41))
        self.negative.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.negative.setObjectName("negative")
        self.blue_inversion = QtWidgets.QPushButton(self.widget)
        self.blue_inversion.setGeometry(QtCore.QRect(10, 60, 141, 41))
        self.blue_inversion.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.blue_inversion.setObjectName("blue_inversion")
        self.retro_2 = QtWidgets.QPushButton(self.widget)
        self.retro_2.setGeometry(QtCore.QRect(10, 110, 141, 41))
        self.retro_2.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.retro_2.setObjectName("retro_2")
        self.retro_1 = QtWidgets.QPushButton(self.widget)
        self.retro_1.setGeometry(QtCore.QRect(160, 60, 141, 41))
        self.retro_1.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"color: rgb(255, 255, 255);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.retro_1.setObjectName("retro_1")
        self.retro_3 = QtWidgets.QPushButton(self.widget)
        self.retro_3.setGeometry(QtCore.QRect(160, 110, 141, 41))
        self.retro_3.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.retro_3.setObjectName("retro_3")
        self.f_blue = QtWidgets.QPushButton(self.widget)
        self.f_blue.setGeometry(QtCore.QRect(10, 160, 141, 41))
        self.f_blue.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.f_blue.setObjectName("f_blue")
        self.f_green = QtWidgets.QPushButton(self.widget)
        self.f_green.setGeometry(QtCore.QRect(160, 160, 141, 41))
        self.f_green.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.f_green.setObjectName("f_green")
        self.f_drawn = QtWidgets.QPushButton(self.widget)
        self.f_drawn.setGeometry(QtCore.QRect(10, 210, 141, 41))
        self.f_drawn.setStyleSheet("QPushButton {\n"
"background-color: rgb(100, 100, 100);\n"
"border-radius:10px;\n"
"color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(120, 120, 120);\n"
"}")
        self.f_drawn.setObjectName("f_drawn")
        self.tabWidget.addTab(self.widget, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.blur_s = QtWidgets.QLabel(self.tab)
        self.blur_s.setGeometry(QtCore.QRect(60, 10, 61, 20))
        self.blur_s.setStyleSheet("color: rgb(255, 255, 255);")
        self.blur_s.setObjectName("blur_s")
        self.BlurSlider = QtWidgets.QSlider(self.tab)
        self.BlurSlider.setGeometry(QtCore.QRect(70, 50, 21, 191))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(68, 56, 72))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.BlurSlider.setPalette(palette)
        self.BlurSlider.setStyleSheet("")
        self.BlurSlider.setMaximum(30)
        self.BlurSlider.setOrientation(QtCore.Qt.Vertical)
        self.BlurSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.BlurSlider.setTickInterval(0)
        self.BlurSlider.setObjectName("BlurSlider")
        self.rotate = QtWidgets.QLabel(self.tab)
        self.rotate.setGeometry(QtCore.QRect(220, 10, 51, 16))
        self.rotate.setStyleSheet("color: rgb(255, 255, 255);")
        self.rotate.setObjectName("rotate")
        self.RotateSlider = QtWidgets.QSlider(self.tab)
        self.RotateSlider.setGeometry(QtCore.QRect(230, 50, 21, 191))
        self.RotateSlider.setOrientation(QtCore.Qt.Vertical)
        self.RotateSlider.setObjectName("RotateSlider")
        self.tabWidget.addTab(self.tab, "")
        self.actions_line = QtWidgets.QLabel(self.centralwidget)
        self.actions_line.setGeometry(QtCore.QRect(330, 550, 271, 21))
        self.actions_line.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(68, 56, 72);\n"
"font: 75 8pt;")
        self.actions_line.setObjectName("actions_line")
        self.open = QtWidgets.QPushButton(self.centralwidget)
        self.open.setGeometry(QtCore.QRect(10, 10, 161, 21))
        self.open.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(80, 80, 80);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100);\n"
"}")
        self.open.setObjectName("open")
        self.exit = QtWidgets.QPushButton(self.centralwidget)
        self.exit.setGeometry(QtCore.QRect(650, 10, 201, 21))
        self.exit.setStyleSheet("QPushButton {\n"
"background-color: rgb(80, 80, 80);\n"
"color: rgb(255, 255, 255);\n"
"font: 75 10pt;\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100);\n"
"}")
        self.exit.setObjectName("exit")
        self.save = QtWidgets.QPushButton(self.centralwidget)
        self.save.setGeometry(QtCore.QRect(180, 10, 121, 21))
        self.save.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.save.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(80, 80, 80);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100);\n"
"}")
        self.save.setObjectName("save")
        self.save_as = QtWidgets.QPushButton(self.centralwidget)
        self.save_as.setGeometry(QtCore.QRect(310, 10, 141, 21))
        self.save_as.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(80, 80, 80);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 100, 100);\n"
"}")
        self.save_as.setObjectName("save_as")
        self.save_as_name = QtWidgets.QLineEdit(self.centralwidget)
        self.save_as_name.setGeometry(QtCore.QRect(460, 10, 181, 21))
        self.save_as_name.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.save_as_name.setObjectName("save_as_name")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MiNiEditor"))
        self.back.setText(_translate("MainWindow", "Вернуться"))
        self.rotate_r.setText(_translate("MainWindow", "90° >"))
        self.rotate_l.setText(_translate("MainWindow", "< 90°"))
        self.image.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.pres_sakura.setText(_translate("MainWindow", "Сакура"))
        self.pres_retro.setText(_translate("MainWindow", "Ретро"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Пресеты"))
        self.ef_rez.setText(_translate("MainWindow", "Резкость"))
        self.ef_3d1.setText(_translate("MainWindow", "3D №1"))
        self.ef_contur.setText(_translate("MainWindow", "Контур"))
        self.ef_3d2.setText(_translate("MainWindow", "3D №2"))
        self.ef_3d3.setText(_translate("MainWindow", "3D №3"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Эффекты"))
        self.black_white.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.black_white.setText(_translate("MainWindow", "Черно-белый"))
        self.negative.setText(_translate("MainWindow", "Негатив"))
        self.blue_inversion.setText(_translate("MainWindow", "Инверсия синего"))
        self.retro_2.setText(_translate("MainWindow", "Ретро №2"))
        self.retro_1.setText(_translate("MainWindow", "Ретро"))
        self.retro_3.setText(_translate("MainWindow", "Ретро №3"))
        self.f_blue.setText(_translate("MainWindow", "Синий"))
        self.f_green.setText(_translate("MainWindow", "Зеленный"))
        self.f_drawn.setText(_translate("MainWindow", "Нарисованный"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.widget), _translate("MainWindow", "Фильтры"))
        self.blur_s.setText(_translate("MainWindow", "Размытие"))
        self.rotate.setText(_translate("MainWindow", "Поворот"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Слайдеры"))
        self.actions_line.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.actions_line.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.open.setText(_translate("MainWindow", "Открыть"))
        self.exit.setText(_translate("MainWindow", "Exit"))
        self.save.setText(_translate("MainWindow", "Сохранить"))
        self.save_as.setText(_translate("MainWindow", "Сохранить как"))
